<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>基于Hexo搭建gitblog心得</title>
    <url>/2020/12/19/23114.html</url>
    <content><![CDATA[<p>本文章将记录基于Hexo以及Next主题搭建github博客并进行相应优化的全过程。过程中参考了很多他人的文章，详见参考资料。同时，在他人的基础上进行整合或有所修改的，将标记*表示自己进行了相应的修改。</p>
<p>另外，由于本文属于回忆，因此可能有些步骤忘记。同时会记录一些搭建过程中暂时没能解决的问题。</p>
<h3 id="修改文章目录中，子标题太长无法显示全面的问题"><a href="#修改文章目录中，子标题太长无法显示全面的问题" class="headerlink" title="修改文章目录中，子标题太长无法显示全面的问题"></a>修改文章目录中，子标题太长无法显示全面的问题</h3><p>在<strong>themes\next_config.yml</strong>中，搜索关键字<strong>toc</strong>，修改<strong>wrap</strong>为<strong>true</strong>即可</p>
<p>修改日期：2020/12/20</p>
<h3 id="文章代码过长不会自动转行显示的问题"><a href="#文章代码过长不会自动转行显示的问题" class="headerlink" title="文章代码过长不会自动转行显示的问题"></a>文章代码过长不会自动转行显示的问题</h3><h3 id="修改主页中文章的摘要内容字数（unsolved）"><a href="#修改主页中文章的摘要内容字数（unsolved）" class="headerlink" title="*修改主页中文章的摘要内容字数（unsolved）"></a>*修改主页中文章的摘要内容字数（unsolved）</h3><p>他人的设置步骤：</p>
<p>打开<strong>themes\next\_config.yml</strong>，搜索关键字<strong>auto_excerpt</strong>，修改<strong>length</strong>即可修改阅读全文前的字数</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">auto_excerpt:</span></span><br><span class="line">	<span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">	<span class="attr">length:</span> <span class="number">150</span></span><br></pre></td></tr></table></figure>
<p>但是经过我的测试，没有在_config.yml中找到相应的属性，只找到了</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">excerpt_description:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>
<p>目前还不清楚应该怎么修改摘要字数的问题，主页中文章摘要过长了。</p>
<p>修改日期：2020/12/20</p>
<h3 id="更改页面的字体（含更改google字体库）"><a href="#更改页面的字体（含更改google字体库）" class="headerlink" title="*更改页面的字体（含更改google字体库）"></a>*更改页面的字体（含更改google字体库）</h3><p>打开<strong>themes\next\_config.yml</strong>，搜索关键字<strong>font</strong>，并将<strong>enable</strong>设置为<strong>true</strong></p>
<p>修改<strong>host:</strong>为<strong>fonts.useso.com</strong>（这是因为如果使用默认的google的字体库，加载起来可能特别慢）</p>
<p>并将<strong>global:</strong>中的<strong>family:</strong>设置为自己想要的字体，如：<strong>Times New Roman</strong></p>
<p>同时设置字号<strong>size:</strong>为<strong>1</strong></p>
<p>修改日期：2020/12/20</p>
<h3 id="修改文章底部的-号的标签，改为图标"><a href="#修改文章底部的-号的标签，改为图标" class="headerlink" title="*修改文章底部的#号的标签，改为图标"></a>*修改文章底部的#号的标签，改为图标</h3><p>修改模板<strong>themes\next\layout_macro\post.swig</strong></p>
<p>*搜索<strong>rel=”tag”&gt;</strong> ,在其后添加</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">&lt;i <span class="class"><span class="keyword">class</span>=</span><span class="string">&quot;fa fa-tag&quot;</span>&gt;&lt; /i&gt;</span><br></pre></td></tr></table></figure>
<p>并删除</p>
<figure class="highlight handlebars"><table><tr><td class="code"><pre><span class="line"><span class="template-variable">&#123;&#123; <span class="name">tag_indicate</span> &#125;&#125;</span><span class="xml"> </span></span><br></pre></td></tr></table></figure>
<p>因此，该行代码变为 </p>
<figure class="highlight handlebars"><table><tr><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;</span></span></span><span class="template-variable">&#123;&#123; <span class="name">url_for</span>(<span class="name">tag.path</span>) &#125;&#125;</span><span class="xml"><span class="tag"><span class="string">&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;tag&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fa fa-tag&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><span class="template-variable">&#123;&#123; <span class="name">tag.name</span> &#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br></pre></td></tr></table></figure>
<p>效果图：<img src="https://raw.githubusercontent.com/Hongjing0506/pictures/master/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20201220185006.png" alt="效果图" title="效果图"></p>
<p>修改日期：2020/12/20</p>
<h3 id="文章加密功能（含直接对tag进行加密）"><a href="#文章加密功能（含直接对tag进行加密）" class="headerlink" title="*文章加密功能（含直接对tag进行加密）"></a>*文章加密功能（含直接对tag进行加密）</h3><p>需要安装插件</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">npm <span class="keyword">install</span> <span class="comment">--save hexo-blog-encrypt</span></span><br></pre></td></tr></table></figure>
<p>1、对单篇文章进行加密</p>
<p>对文章头添加: password、abstract、message、wrong_pass_message、wrong_hash_message</p>
<p>例如：<img src="https://raw.githubusercontent.com/Hongjing0506/pictures/master/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20201220193414.png" alt="示意图"></p>
<p>2、对某个标签下的文章进行加密</p>
<p>对博客根目录站点配置文件<strong>_config.yml</strong>文件添加以下字段：</p>
<figure class="highlight handlebars"><table><tr><td class="code"><pre><span class="line"><span class="xml">encrypt: # hexo-blog-encrypt</span></span><br><span class="line"><span class="xml">  abstract: 文章已加密，请输入密码查看</span></span><br><span class="line"><span class="xml">  message: 您好, 请输入密码</span></span><br><span class="line"><span class="xml">  tags:</span></span><br><span class="line"><span class="xml">  - &#123;name: tagName, password: 密码A&#125;</span></span><br><span class="line"><span class="xml">  - &#123;name: tagName, password: 密码B&#125;</span></span><br><span class="line"><span class="xml">  template: <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;hexo-blog-encrypt&quot;</span> <span class="attr">data-wpm</span>=<span class="string">&quot;</span></span></span><span class="template-variable">&#123;&#123;<span class="name">hbeWrongPassMessage</span>&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">&quot;</span> <span class="attr">data-whm</span>=<span class="string">&quot;</span></span></span><span class="template-variable">&#123;&#123;<span class="name">hbeWrongHashMessage</span>&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;hbe-input-container&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">id</span>=<span class="string">&quot;hbePass&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;</span></span></span><span class="template-variable">&#123;&#123;<span class="name">hbeMessage</span>&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">&quot;</span> /&gt;</span><span class="tag">&lt;<span class="name">label</span>&gt;</span></span><span class="template-variable">&#123;&#123;<span class="name">hbeMessage</span>&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">label</span>&gt;</span><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;bottom-line&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">script</span> <span class="attr">id</span>=<span class="string">&quot;hbeData&quot;</span> <span class="attr">type</span>=<span class="string">&quot;hbeData&quot;</span> <span class="attr">data-hmacdigest</span>=<span class="string">&quot;</span></span></span><span class="template-variable">&#123;&#123;<span class="name">hbeHmacDigest</span>&#125;&#125;</span><span class="xml"><span class="tag"><span class="string">&quot;</span>&gt;</span></span><span class="template-variable">&#123;&#123;<span class="name">hbeEncryptedData</span>&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">  wrong_pass_message: 密码输入错误</span></span><br><span class="line"><span class="xml">  wrong_hash_message: 密码正确</span></span><br></pre></td></tr></table></figure>
<p><strong>注1：</strong>配置优先级：文章信息头 &gt; 按标签加密</p>
<p>因此当被加密的tag下某一篇文章希望不要加密时，可在该文章设置password为””，就可取消该文章的加密.</p>
<p><strong>注2：</strong>我在测试的过程中发现，在输入了加密网页的密码以后，再重新刷新也不再需要输入密码。同时，如果从单篇文章加密改为对相应的tag加密，利用”hexo s”进行测试时，发现进入文章不需要输入密码，可能是因为之前已经输入过密码了。因此需要换一台设备进行测试。</p>
<p>除此之外，由于Next主题会对文章自动生成TOC目录，因此在使用该插件对文章进行加密后，即使解密也不能正确显示文章的TOC目录，<strong>该问题待解决</strong>。我尝试使用方法3对**themes\next\layout_macro\sidebar.swig中的toc相关代码进行修改，由于没学过该种编程语言，因此以失败告终。有请大佬提供相关解决方案（请将解决方法发送至我的邮箱（网页左侧个人信息下的E-mail图标即可通过邮箱联系我），感谢感谢！）</p>
<p><strong>注3：</strong>插件作者在github中提到：“在部分博客中，解密后部分元素可能无法正常显示或者表现, 这属于已知问题. 目前的解决办法是通过自行查阅自己的博客中的代码, 了解到在 onload 事件发生时调用了哪些函数, 并将这些函数挑选后写入到博客内容中”</p>
<p>3、对TOC文章进行加密</p>
<p>参考资料中以landscape主题为例，未找到在Next主题中的修改方法，因此<strong>待解决</strong>。</p>
<p>方法1-3的参考资料：<a href="https://zhuanlan.zhihu.com/p/113235573">https://zhuanlan.zhihu.com/p/113235573</a> &amp; <a href="https://github.com/D0n9X1n/hexo-blog-encrypt/blob/master/ReadMe.zh.md">https://github.com/D0n9X1n/hexo-blog-encrypt/blob/master/ReadMe.zh.md</a> &amp; <a href="https://xsin.gitee.io/2019/01/11/hexo-blog-encrypt/">https://xsin.gitee.io/2019/01/11/hexo-blog-encrypt/</a></p>
<p>4、其他人提及的方法（在本地预览生效，但部署到github上后失效，原因未明）</p>
<p>打开<strong>themes\next\layout_partials\head\head.swig</strong>文件，并在以下位置：</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">&lt;link <span class="attribute">href</span>=<span class="string">&quot;//cdn.bootcss.com/pace/1.0.2/themes/pink/pace-theme-flash.css&quot;</span> <span class="attribute">rel</span>=<span class="string">&quot;stylesheet&quot;</span>&gt;</span><br></pre></td></tr></table></figure>
<p>的下一行插入以下代码：</p>
<figure class="highlight handlebars"><table><tr><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="xml">    (function()&#123;</span></span><br><span class="line"><span class="xml">        if(&#x27;</span><span class="template-variable">&#123;&#123; <span class="name">page.password</span> &#125;&#125;</span><span class="xml">&#x27;)&#123;</span></span><br><span class="line"><span class="xml">            if (prompt(&#x27;请输入文章密码&#x27;) !== &#x27;</span><span class="template-variable">&#123;&#123; <span class="name">page.password</span> &#125;&#125;</span><span class="xml">&#x27;)&#123;</span></span><br><span class="line"><span class="xml">                alert(&#x27;密码错误！&#x27;);</span></span><br><span class="line"><span class="xml">                history.back();</span></span><br><span class="line"><span class="xml">            &#125;</span></span><br><span class="line"><span class="xml">        &#125;</span></span><br><span class="line"><span class="xml">    &#125;)();</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure>
<p>但是我在实际修改的过程中给，并没有找到他人文中提及的插入代码的位置，因此在<strong>head.swig</strong>文件的最后部分（<strong>{ { next_config()}}</strong>的前面）插入了上述代码。在利用<strong>hexo s</strong>在本地进行预览时，可以生效，但是部署到github上后失效，原因未明。</p>
<p>修改日期：2020/12/20</p>
<h3 id="代码设置高亮"><a href="#代码设置高亮" class="headerlink" title="代码设置高亮"></a>代码设置高亮</h3><p>在<strong>themes\next\_config.yml</strong>中搜索<strong>highlight</strong>并将<strong>enable</strong>设置为<strong>true</strong>。</p>
<p>修改日期：2020/12/20</p>
<h3 id="隐藏网页底部的powered-By-Hexo-强力驱动"><a href="#隐藏网页底部的powered-By-Hexo-强力驱动" class="headerlink" title="隐藏网页底部的powered By Hexo / 强力驱动"></a>隐藏网页底部的powered By Hexo / 强力驱动</h3><p>打开<strong>themes\next\_config.yml</strong>，并找到<strong>powered</strong>，设置其为<strong>false</strong>。</p>
<p>修改日期：2020/12/20</p>
<h3 id="文章置顶功能"><a href="#文章置顶功能" class="headerlink" title="文章置顶功能"></a>文章置顶功能</h3><p>先重装一下相关插件：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">npm <span class="keyword">uninstall</span> hexo-generator-<span class="keyword">index</span> <span class="comment">--save</span></span><br><span class="line">npm <span class="keyword">install</span> hexo-generator-<span class="keyword">index</span>-pin-top <span class="comment">--save</span></span><br></pre></td></tr></table></figure>
<p>然后在需要置顶的文章的文章头添加<strong>top: true</strong></p>
<p>如：<img src="https://raw.githubusercontent.com/Hongjing0506/pictures/master/20201220220331.png" alt="置顶"></p>
<p>同时，还需要设置“置顶”字样：</p>
<p>打开<strong>themes\next\layout\_macro\post.swig</strong>并搜索<strong>/<div class="post-meta"></div></strong>下方插入代码</p>
<figure class="highlight django"><table><tr><td class="code"><pre><span class="line"><span class="template-tag">&#123;% <span class="name"><span class="name">if</span></span> post.top %&#125;</span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fa fa-thumb-tack&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">7D26CD</span>&gt;</span>置顶<span class="tag">&lt;/<span class="name">font</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;post-meta-divider&quot;</span>&gt;</span>|<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="template-tag">&#123;% <span class="name"><span class="name">endif</span></span> %&#125;</span></span><br></pre></td></tr></table></figure>
<p>如图所示：</p>
<p><img src="https://raw.githubusercontent.com/Hongjing0506/pictures/master/20201220220725.png" alt></p>
<p><strong>注：</strong>如果有多篇置顶，需要调整指定的顺序时，可将<strong>top</strong>设置为一个数值，数值越大越靠前。</p>
<p>效果图：<img src="https://raw.githubusercontent.com/Hongjing0506/pictures/master/20201220220917.png" alt="置顶效果"></p>
<p>修改日期: 2020/12/20</p>
]]></content>
      <tags>
        <tag>Blog搭建</tag>
      </tags>
  </entry>
  <entry>
    <title>win10的mail应用添加邮箱账户</title>
    <url>/2020/12/27/64326.html</url>
    <content><![CDATA[<h2 id="Win-10-mail-应用更新邮箱"><a href="#Win-10-mail-应用更新邮箱" class="headerlink" title="Win 10 mail 应用更新邮箱"></a>Win 10 mail 应用更新邮箱</h2><p>因为邮箱比较多，有点懒得每次都打开对应的邮箱网页输入密码，希望通过一个客户端管理多个邮箱，因此今天尝试使用win10自带的mail应用。但竟然小小地踩雷了：</p>
<p>明明输入了新的邮箱账户，提示添加成功却没有成功添加上，不停地提示我添加新的账户，没有别的选项。搜索百度好像也没有什么答案，以下记录解决问题的过程。</p>
<h3 id="重装mail应用"><a href="#重装mail应用" class="headerlink" title="重装mail应用"></a>重装mail应用</h3><p>首先打开微软应用商店，搜索mail，将原有的mail卸载掉，并重新下载安装</p>
<h3 id="添加邮箱账户"><a href="#添加邮箱账户" class="headerlink" title="添加邮箱账户"></a>添加邮箱账户</h3><p>我主要添加了qq邮箱，163邮箱和腾讯企业邮箱。</p>
<h4 id="添加qq邮箱"><a href="#添加qq邮箱" class="headerlink" title="添加qq邮箱"></a>添加qq邮箱</h4><p>首先添加qq邮箱：比较简单，点击账户-添加账户，输入邮箱地址和密码即可。</p>
<p>重点需要说明的是163邮箱和腾讯企业邮箱。</p>
<h4 id="添加163邮箱"><a href="#添加163邮箱" class="headerlink" title="添加163邮箱"></a>添加163邮箱</h4><p>首先需要确认163邮箱的IMAP/SMTP服务已经开启。</p>
<p>在网页上登录自己的163邮箱，然后选择邮箱设置-POP3/SMTP/IMAP，然后在开启服务：IMAP/SMTP服务中选择“开启”。</p>
<p>按照提示，邮箱将会需要你用手机扫描二维码，发送一条短信到指定的地方。发送短信成功后，将会发放一个授权密码（这个授权密码只会显示一次，因此请妥善保管），复制这个授权密码，回到自己的win10 mail应用，点击<strong>账户-添加账户-其他账户POP, IMAP</strong>，然后输入自己163邮箱的邮箱地址，然后在密码栏输入这个授权码，点击<strong>登录</strong>就可以成功添加账户。</p>
<h4 id="添加腾讯企业邮箱"><a href="#添加腾讯企业邮箱" class="headerlink" title="添加腾讯企业邮箱"></a>添加腾讯企业邮箱</h4><p>首先同样需要在网页上登录自己的腾讯企业邮箱，进入邮箱设置-客户端设置，将会在设置方法处看到“接收服务器”和“发送服务器”。它们分别是<strong>imap.exmail.qq.com</strong>和<strong>smtp.exmail.qq.com</strong>，它们的后面还会跟着括号（使用SSL，端口号XXX）。</p>
<p>此时回到win10 mail应用，点击<strong>账户-添加账户-其他账户POP,IMAP</strong>，输入自己的企业邮箱地址和密码，然后点击<strong>登录</strong>，此时还不能正常收发邮件。还需要在管理账户里面，点选一下刚才添加的这个企业邮箱，然后点击<strong>更改邮箱同步设置（用于同步内容的选项）-高级邮箱设置（传入和传出邮件服务器信息）</strong>，此时将会多出“传入电子邮件服务器”和“传出（SMTP）电子邮件服务器”。将刚才找到的接收服务器和发送服务器的网址分别填入（不包括括号及括号内的内容），点击<strong>完成-保存</strong>就可以连接成功，正常收发邮件了。</p>
]]></content>
      <tags>
        <tag>win10</tag>
        <tag>mail应用</tag>
      </tags>
  </entry>
  <entry>
    <title>typora-主题更改和字体更改</title>
    <url>/2020/12/27/57588.html</url>
    <content><![CDATA[<h2 id="typora主题更改以及编辑器字体更改"><a href="#typora主题更改以及编辑器字体更改" class="headerlink" title="typora主题更改以及编辑器字体更改"></a>typora主题更改以及编辑器字体更改</h2><p>如何修改一下typora编辑器的主题，还有字体？</p>
<h3 id="准备工作：安装字体"><a href="#准备工作：安装字体" class="headerlink" title="准备工作：安装字体"></a>准备工作：安装字体</h3><p>首先需要安装想用的字体，具体过程请直接百度（例如我所使用的是思源宋体）。</p>
<h3 id="更换主题"><a href="#更换主题" class="headerlink" title="更换主题"></a>更换主题</h3><p>打开typora编辑器的<strong>偏好设置-外观-获取主题</strong>，这将直接打开typora官网上已经有的主题。选择一款自己喜欢的进行下载并解压，将里面的.css文件复制，然后在typora编辑器的<strong>偏好设置-外观-打开主题文件夹</strong>，将复制的.css文件粘贴进去，然后重启typora，就可以在偏好设置-外观-主题那里选择自己想用的主题了。（注：我所使用的是autumus主题，我发现需要将同一个风格的几个.css文件都复制进去，如Autumnus.css  Autumnus-dark.css  Autumnus-fluence.css，才能选择antumus主题，不知道是不是我操作错误）</p>
<h3 id="更换主题的字体"><a href="#更换主题的字体" class="headerlink" title="更换主题的字体"></a>更换主题的字体</h3><p>注：这不等于更换markdown文件所使用的字体，只是更改了编辑器显示的时候用的字体而已。要修改markdown的字体，请自行百度。</p>
<p>用记事本（或写字板、其他代码编辑器等）打开自己目前正在使用的主题对应的.css文件，然后查找“font-family”，将自己想要使用的字体的名字添加到最前面去。例如在night.css文件中，查找font-family，则会找到：</p>
<p><img src="https://raw.githubusercontent.com/Hongjing0506/pictures/master/20201227203759.png" alt></p>
<p>此时这个主题将会首先尝试使用Helvetica Neue字体，如果系统中没有这个字体，就会尝试使用Helvetica字体，以此类推。</p>
<p>想要使用思源宋体，则在最前面添加<strong>“思源宋体 CN Medium”, </strong>需要注意的是双引号和逗号都需要使用英文格式的。 </p>
<p>而我自己所使用的autumns主题的css文件略有不同，它是先定义了—base-font等的变量，再在之后调用的。</p>
<p><img src="https://raw.githubusercontent.com/Hongjing0506/pictures/master/20201227203819.png" alt></p>
<p>因此添加的字体就需要在这里进行添加，而不是font-family，同样是添加到最前面。</p>
<h3 id="效果图展示（以思源宋体为例）"><a href="#效果图展示（以思源宋体为例）" class="headerlink" title="效果图展示（以思源宋体为例）"></a>效果图展示（以思源宋体为例）</h3><p><img src="/2020/12/27/57588/Users\11529\AppData\Roaming\Typora\typora-user-images\image-20201227204128433.png" alt="image-20201227204128433" style="zoom:50%;"></p>
]]></content>
      <tags>
        <tag>markdown编辑器</tag>
        <tag>typora</tag>
      </tags>
  </entry>
  <entry>
    <title>markdown学习笔记</title>
    <url>/2020/12/20/24465.html</url>
    <content><![CDATA[<h2 id="在学习markdown语法过程中同时练习"><a href="#在学习markdown语法过程中同时练习" class="headerlink" title="在学习markdown语法过程中同时练习"></a>在学习markdown语法过程中同时练习</h2><p>使用的Markdown编辑器为：Typora</p>
<p>标题语法：</p>
<p>Markdown语法：#</p>
<h1 id="的个数代表多少级标题"><a href="#的个数代表多少级标题" class="headerlink" title="的个数代表多少级标题"></a>的个数代表多少级标题</h1><p>例如## 二级标题</p>
<p>*可选语法：同时，还可以通过使用在文本下方添加任意数量的====号来标识一级标题，通过添加—-号表示二级标题（经测试，Typora并不支持这一语法）</p>
<p>不同的Markdown编辑器在处理#与标题之间的空格方式不同。经测试，Typora在#和标题内容之间需要有空格（但是似乎只是影响在Typora中的渲染，#和内容之间没有空格在提交md文件时依然被渲染为标题）</p>
<h4 id="无空格"><a href="#无空格" class="headerlink" title="无空格"></a>无空格</h4><p>同时，经过测试发现，只有在句首的#才被认定为是标题</p>
<p>问：能否设置在句首的#不设定为标题？</p>
<p>答：目前发现的方案是可以在句首加入一个空格。是否存在不加入空格的方案？</p>
]]></content>
      <categories>
        <category>blog学习</category>
      </categories>
      <tags>
        <tag>markdown语法</tag>
      </tags>
  </entry>
</search>
